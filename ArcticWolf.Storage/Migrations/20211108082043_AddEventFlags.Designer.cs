// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ArcticWolf.Storage.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20211108082043_AddEventFlags")]
    partial class AddEventFlags
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.11");

            modelBuilder.Entity("ArcticWolf.DataMiner.Storage.FnEventFlag", b =>
                {
                    b.Property<string>("Event")
                        .HasColumnType("TEXT");

                    b.HasKey("Event");

                    b.ToTable("FnEventFlags");
                });

            modelBuilder.Entity("ArcticWolf.DataMiner.Storage.FnEventFlagTimeSpan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("FnEventFlagEvent")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("FnEventFlagEvent");

                    b.ToTable("FnEventFlagTimeSpans");
                });

            modelBuilder.Entity("ArcticWolf.DataMiner.Storage.FnVersion", b =>
                {
                    b.Property<decimal>("Version")
                        .HasColumnType("TEXT");

                    b.Property<string>("MainKey")
                        .HasColumnType("TEXT");

                    b.Property<string>("VersionString")
                        .HasColumnType("TEXT");

                    b.HasKey("Version");

                    b.ToTable("FnVersions");
                });

            modelBuilder.Entity("ArcticWolf.DataMiner.Storage.PakFile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AesKey")
                        .HasColumnType("TEXT");

                    b.Property<string>("File")
                        .HasColumnType("TEXT");

                    b.Property<int>("FnVersionId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal?>("FnVersionVersion")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("FnVersionVersion");

                    b.ToTable("PakFiles");
                });

            modelBuilder.Entity("ArcticWolf.DataMiner.Storage.TkKey", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("FnVersionId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal?>("FnVersionVersion")
                        .HasColumnType("TEXT");

                    b.Property<string>("Key")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("FnVersionVersion");

                    b.ToTable("TkKeys");
                });

            modelBuilder.Entity("ArcticWolf.DataMiner.Storage.FnEventFlagTimeSpan", b =>
                {
                    b.HasOne("ArcticWolf.DataMiner.Storage.FnEventFlag", null)
                        .WithMany("TimeSpans")
                        .HasForeignKey("FnEventFlagEvent");
                });

            modelBuilder.Entity("ArcticWolf.DataMiner.Storage.PakFile", b =>
                {
                    b.HasOne("ArcticWolf.DataMiner.Storage.FnVersion", "FnVersion")
                        .WithMany("PakFiles")
                        .HasForeignKey("FnVersionVersion");

                    b.Navigation("FnVersion");
                });

            modelBuilder.Entity("ArcticWolf.DataMiner.Storage.TkKey", b =>
                {
                    b.HasOne("ArcticWolf.DataMiner.Storage.FnVersion", "FnVersion")
                        .WithMany("TkKeys")
                        .HasForeignKey("FnVersionVersion");

                    b.Navigation("FnVersion");
                });

            modelBuilder.Entity("ArcticWolf.DataMiner.Storage.FnEventFlag", b =>
                {
                    b.Navigation("TimeSpans");
                });

            modelBuilder.Entity("ArcticWolf.DataMiner.Storage.FnVersion", b =>
                {
                    b.Navigation("PakFiles");

                    b.Navigation("TkKeys");
                });
#pragma warning restore 612, 618
        }
    }
}
